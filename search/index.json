[{"content":"Most GTA V scripting newbies, when trying to do something repeatedly, would try to do this: (using C# as an example)\n1 2 3 4 while (condition) { // do processing logic. } However, when they go and run this, they\u0026rsquo;ll see that the game either freezes or crashes, with no clue of what went wrong.\nSo what really went wrong? In order to answer this question, I will have to explain how the GTA V scripts run.\nAll calls to the game and everything that deals with the game world needs to be synchronised. This means only one party (that is, either the game itself, a ysc script which is a type of script embedded in the game, or one of the custom scripts/game fibre provided by SHV, SHVDN, RPH, etc.) may deal with game functions at the same time, and script hooks will have to ensure that too.\nThe game achieves this using ticks. Each tick, the game runs once, and all other scripts run once. When they return or finish running one loop, they will have to explicitly tell the game by yielding themselves so that the game engine can pass on executing the next stuff.\nIf one fails to yield in loop, the loop will run in a single tick, and the game freezes until the loop returns (and if the loop is a while true with no break that means never). Thankfully, ScriptHookV .NET and RAGE Plugin Hook both have safety measures in place to terminate scripts/plugins that fails to yield to other scripts for a set amount of time (this is usually 10 seconds but LSPD:FR players tend set it to one minute due to how long LSPD:FR takes to load).\nThis RPH documentation article explains this in detail.\nHow do I fix this problem? In order to allow the game and others to run, you will have to yield in your loops. How you do the actual yielding depends on the framework you are using.\nScriptHookV If you use ScriptHookV, you should do so whenever you need to do loops. Do this when looping:\n1 2 3 4 5 while (condition) { WAIT(0); // ... your code } WAIT(0) here means that the script while pause and allow others to run, and resume at the next tick.\nScriptHookV .NET, and FiveM .NET You should try to avoid doing your own loops because the Script base class already providing a ticking function.\n1 2 3 4 5 6 7 8 9 public MyScript() { Tick += OnTick; } private void OnTick(object sender, EventArgs args) { // Your code. } ScriptHookV .NET will automatically do the yielding for you after your OnTick handler returns. But beware, if the OnTick function does not return, it will not yield too.\nYou can manually yield by calling Script.Yield() if necessary.\nRAGE Plugin Hook Yielding in RPH is more or less the same as of in ScriptHookV.\n1 2 3 4 5 6 7 8 public static void Main() { while (condition) { GameFiber.Yield(); // Your code. } } Others Other script engines (FiveM Lua, Lua ScriptHook) should be similar to ScriptHookV or the ScriptHookV .NET, in terms of yielding.\n","date":"2023-12-11T08:23:14+08:00","permalink":"https://withlithum.github.io/p/ticks-and-loops-in-gta-v-scripting/","title":"Ticks and Loops in GTA V Scripting"},{"content":"This is the first status update for the IceShell Anniversary Preview (v0.3.0-alpha), which is set to release at 1st of Feburary 2024, exactly one year after its first commit. While I\u0026rsquo;ve been working on it for the last year, there weren\u0026rsquo;t some major improvements until the Anniversary Preview were planned.\nThe Anniversary Preview comes with the overhual of one of the systems that IceShell relies on - internal command registry.\nInternal Command Registry Let\u0026rsquo;s outline the main changes made to the Internal Command Registry system:\nRewrite of registry system The attribute-based command system have been decoupled from the command registry system. Instead, you need to maintain an instance of AnnotatedCommandRegistry. This change does not bring breaking API changes to the attributes surface, though! You can now register commands with a CommandRegistryEntry which describes the command, and a CommandDelegate which handles the execution of the command. The command manager (ICommandManager) and dispatcher (ICommandDispatcher) interface have been merged to a single interface, the IRegistryCommandDispatcher interface! Here is an example of how to register an annotated command under the new system:\n1 2 3 4 5 var registry = new AnnotatedCommandRegistry(dispatcher); registry.Register(typeof(AnnotatedCommand)); // Whereas the shell is the dispatcher that is passed via shell or module initialisation. // and AnnotatedCommand is the command you are going to register. Here is a demonstration of how to register a command without an annotated shell command class:\n1 2 3 4 5 6 7 8 var entry = new CommandRegistryEntry(\u0026#34;command\u0026#34;); var val = entry.AddValue(\u0026#34;value\u0026#34;, 0); dispatcher.Register(entry, (shell, executor, context) =\u0026gt; { Console.WriteLine(context.Arguments.Values[val]); }); dispatcher.Execute(\u0026#34;command testvalue\u0026#34;); // testvalue Separation of command aliases and IDs Once a time ago, there are no command aliases, and commands are directly referred to with their ID (called Name at that time). Because of there are requirements for supporting commands with multiple names, an alias feature was added. The alias feature were implemented by registering the same command twice or more times under different names.\nIn the Anniversary Preview, the command IDs and aliases are now registered separately:\nThe same command registered with two or more IDs are treated with separate commands (or separate instances of the same command, if you thinks so).\nMultiple aliases will correspond to unique IDs of commands, and the command dispatcher will use the ID to acquire the command definition from the registry.\nCommand IDs are case sensitive, while command aliases are case insensitive.\nLet\u0026rsquo;s suppose there is a command registered with ID test. By default, the ID of the command is automatically registered as an alias of the command. Here is an example demonstrating the differences between aliases and IDs:\n1 2 3 4 5 6 7 8 9 10 11 12 dispatcher.Register(entry, routine); // Entry is a command with ID \u0026#34;test\u0026#34;. // Command IDs are case sensitive. Console.WriteLine(dispatcher.AnyCommand(\u0026#34;test\u0026#34;)); // True Console.WriteLine(dispatcher.AnyCommand(\u0026#34;TEST\u0026#34;)); // False Console.WriteLine(dispatcher.AnyCommand(\u0026#34;tEsT\u0026#34;)); // False // Command aliases are case insensitive. Console.WriteLine(dispatcher.HasAlias(\u0026#34;TEST\u0026#34;)); // True Console.WriteLine(dispatcher.HasAlias(\u0026#34;test\u0026#34;)); // True Console.WriteLine(dispatcher.HasAlias(\u0026#34;TeSt\u0026#34;)); // True Platform Modules The Anniversary Preview update introduces two Platform Modules, the GNU/Linux platform module and Windows platform module.\nThe two modules are bundled in a standard release package and is automatically enabled on their respective platforms.\nCommand Changes Bundled Commands Added the new CHMOD command in the GNU/Linux platform module\nAdded the new DATE command for viewing date and time\nAdded the new FIND command for searching for text strings in pipeline input\nModified the syntax of the PROMPT command and the prompt itself to support more placeholders\nAdded the new MEM and VOLcommands in the Windows platform module\nAdded the new MORE command to separate large chunk of text to pages with size determined by the size of the text buffer area of your terminal (emulator) window or screen.\nCommand Help The description of commands and its parameters are no longer hardcoded. Instead, the description will be shown as a localised message with automatically generated message ID.\nThe message ID format is shown as below:\nType Message ID Format Command description command.\u0026lt;command-name\u0026gt;.description Value parameter description command.\u0026lt;command-name\u0026gt;.value_\u0026lt;reference-name\u0026gt;.description Option parameter description command.\u0026lt;command-name\u0026gt;.option_\u0026lt;identifier\u0026gt;.description Command Actions The support for a single ampersand to connect two commands have been added. A single ampersand means to execute the command to the right regardless of the result of the command to the left.\nArgument Parsing The support for multiple integral types have been added to annotated commands. Currently this includes Int32, Int64, Byte, SByte, Byte and also Enum.\nI plan to add this argument conversion service to non-annotated commands.\nIn the end\u0026hellip; I would like to thank JetBrains for providing a free licence for their tools to help develop IceShell. Their tools have really helped me to make the later than much more major and important changes to the core systems. Without their tools, I would have costed much more time to may these important changes.\nThat\u0026rsquo;s all for now! I will continue to add new features and updates to the Anniversary Preview and improve it further in the meanwhile.\n","date":"2023-11-18T08:55:23+08:00","image":"https://withlithum.github.io/p/iceshell-anniversary-preview-status-update-1/cover_hu7163e30c5a7469709a902875503ada32_194914_120x120_fill_box_smart1_3.png","permalink":"https://withlithum.github.io/p/iceshell-anniversary-preview-status-update-1/","title":"IceShell Anniversary Preview - Status Update 1"},{"content":"When you start a process with UseShellExecute set to true on Windows, .NET Runtime calls the Win32 ShellExecute API to have the OS do this for the application.\nHowever, on GNU/Linux, the things work different. First, the .NET Runtime will check if your target file is executable. If so, the .NET Runtime will start it as an executable.\nIf the target file is not an executable, then .NET will attempt to find the following external commands in PATH: xdg-open, gnome-open and kfmclient. The first available external command of the above will be executed to start the program with default association.\nWhat if none of these are available? The .NET Runtime will throw a Win32Exception stating that it failed to create the process because \u0026ldquo;No such file or directory\u0026rdquo;.\n","date":"2023-10-05T20:05:03+08:00","permalink":"https://withlithum.github.io/p/how-dotnet-process-shell-execute-works-on-linux/","title":"How DotNet Process Shell Execute works on Linux"},{"content":"This article only applies for text-and-image blogging websites.\nHow do they work Anti-adblock software runs in your browser to check if an AD Blocker is running or blocks\nHow to block anti-adblock popups Do not turn off your AD-blocker and tracking prevention.\nYou will usually be able to prevent annoying anti-adblock popups by just doing one thing - disabling JavaScript on the website where it have appeared. Unless the anti-adblock software makers exploited security issues in browsers to force you watch ads, this is the most effective way.\nHow to disable JavaScript? Edge Open the website you want to disable JavaScript. Do not turn off your ad-blocker and tracking prevention here! Click the Info or Lock icon in the left side of the address bar. Click Permissions for this site. Scroll to JavaScript, and click Allow (Default) to the right. In the popup menu, select Block. Refresh the page. ","date":"2023-09-24T08:21:46+08:00","permalink":"https://withlithum.github.io/p/disabling-the-blockers-of-ad-blocker-blocker/","title":"Disabling the Blockers of Ad Blocker Blocker"},{"content":" WARNING!!!\nTHIS ARTICLE MAY CONTAIN SPOILERS FOR THE ASSASSIN OF STEVE SERIES.\nDownload the Maps YOU CAN DOWNLOAD AND PLAY THE MAPS HERE: (listed in chronological order of canon lore)\nAssassin of Steve for 1.10.2 Assassin of Steve 2: The Tribal Snouts for 1.10.2 Assassin of Steve 3: Endergeddon for 1.11.2 The maps are for Java Edition and MUST BE PLAYED ON EACH RESPECTIVE DESIGNATED MINECRAFT VERSION, otherwise the maps will break.\nAssassin of Steve The map Assassin of Steve is the first in the Assassin of Steve series, and it was made for 1.7.10. In fact, the first scene in Mission 10 kinda resembles the vanilla 1.7 age for me.\nTips I As it was made initially for 1.7 and updated to 1.10 at a later time, there are a lot of old mechanisms that have not been replaced with newer detection (such as the wheat section in the Starter Mission). This map was built on a super-flat world with no decorations, and every terrain you see is actually manually built. This map is probably the easiest in the series. Beware of soft-lock two-block-deep holes. More Completions This is the proof of an older play-through.\nAssassin of Steve 2: The Tribal Snouts This is the second map in the series and it was made initially for 1.8, and have since been updated for 1.10. A lot of later map mechanics were introduced in this map.\nTips II Be warned that there is an armour-stand hallway in the later parts of the map, and this will cause very noticeable lag and FPS drop. The severity of the FPS drop and lag depends on your computer setup, but it generally makes the that part of the map lag to the point that it will be very hard to even kill just a single mob. This map was built on a super-flat jungle world with jungle trees. The two final bosses are easy to defeat after you have engaged in direct combat with them. Beware of soft-lock two-block-deep holes. Assassin of Steve 3: Endergeddon Tips III This map is built for 1.11 and have not been updated to newer versions.\nDo not use Minecraft Forge. Minecraft Forge breaks several features of this map, and potentially even more:\nThe process to properly re-spawn you after completion Mission 14 does not work, and you will be stuck in The End. You could be stuck in or be soft-locked after some cut-scenes. All armours became unbreakable. Sometimes you will encounter an issue after long-distance teleport or after switching to and back from Spectator Mode that can result in:\nYour elytra stops working. Switching armours does not change your maximum health. Switching weapons does not change your attack speed. Your character became transparent or invisible. This can be fixed by dying and re-spawning, or by logging out then log back in.\nThis map utilizes cut-scenes. You can encounter bugs like being stuck in spectator mode or the being soft-locked after cut-scene completion. There are guides in the README.txt file that is included with the compressed archive that the map is in.\nBeware of soft-lock two-block-deep holes.\n","date":"2023-09-12T08:32:43+08:00","image":"https://withlithum.github.io/p/to-endfinity/cover_compressed_hu77f19154e112f6a85529fb393cc0a5ee_872695_120x120_fill_box_smart1_3.png","permalink":"https://withlithum.github.io/p/to-endfinity/","title":"To Endfinity"},{"content":"This article was edited since (at 11th of November, 2023) its initial release to reflect the current changes.\nParts of this article is based on my personal assumptions and knowledge. Yet, this does not disqualify the initial purpose of this article. I solely will decide whether a problem is material to the cause of this article or is totally immaterial to the matter.\nDisclaimer: I am not responsible for any damages, loss or costs as induced by or otherwise related to or associated with anything in the article.\nQuestions and Answers What is SponsorLink anyways? SponsorLink is a piece of formerly obfuscated1MSBuild middleware that runs in the building process that connects with a remote server with the hash of your email address (the consent requirement was not there until recently) in order to verify you have sponsored the project. If you have not sponsored the project, a build delay and a build warning will be added for the first time that project was built on the same IDE instance. (It was added for each build before it was changed to the current system persumably due to critics). The makers of SponsorLink claims that they do not collect any more information than that. Currently this software does not impact end users of a software, only the build process.\nMoq have since removed it claiming it \u0026ldquo;breaks builds on some systems\u0026rdquo; rather than other valid concerns, persumably with intention to bring it back at a later time. (Further research found out that Synk had marked Moq as having unwanted behaviour.) The version number that was released to remove SponsorLink was 4.20.69, and I personally would (because of the number 69) understand it as a some sort of despise to those who are against the SponsorLink.\nIssues were raised about the behaviour but they are just ignored by the original author. The original author does does have a discussion thread but his response to critics were nothing more than just pickling on some very minor immaterial details in order to (by attempting to try to convince other people that the critics are wrong) provide a somewhat justifiable cause for such malicious middleware.\nWhy is it not acceptable? The designed purpose of the SponsorLink is to take something that users already have and expect (build project without delays and unsolicited information) make it exclusive to those who have paid for. SponsorLink is mainly used in projects that are licensed under a permissive license, and kzu persumably made this middleware based on the same intention that made Marak Squires made color.js and faker.js private (before community forked these). kzu may have wanted to make it similar to a product activation system but refrained from parts of the idea because of critics, and based on his response to critics in his own comment section, persumably in order to \u0026ldquo;fight back critics and prove I am totally correct\u0026rdquo;.\nThere are tons of other acceptable ways for open source sustainability, for example, the MkDocs Material sponsorware model is one of sponsorship models that I personally does not disagree with.\nAt least personally to me, begging for sponsorship in an annoying way while it is not strictly necessary means that people would simply get annoyed and stop using the project, not even to say if they are willing to pay for that or not. Everybody can define what is considered as \u0026ldquo;annoying\u0026rdquo; for themselves, yet generally a sponsorship link in the README section and in package description, as well as a one-time, non-modal and non-interruptive notice after package install is generally considered OK.\nWhat are the Replacements for SponsorLink-ed projects? You can also try to fork and wipe the project clean of SponsorLink, but beware of hidden caveats.\nMoq: Use NSubstitute. See AlbertoMonteiro\u0026rsquo;s moq-to-nsubstitute, and you may try Creastoff\u0026rsquo;s Moqstitute. I have also created a fork of Moq in order to strip all SponsorLink whenever and wherever it appears in the project. It should pass all tests and be 100% compatible with your current code. NuGetizer: Remove the package and all packages as related to it. You do not need it to build your software. But I cannot replace these packages! Disconnnect all connections to Internet if you work on any project that is SponsorLink-ed, but I do not gurrantee this will work forever. Devlooped can simply add a feature to require Internet connection when building project.\nYou may also fork the project.\nIssues with this Article Use the Issues section.\nMessage in C# discord\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-08-12T09:44:23+08:00","image":"https://withlithum.github.io/p/the-so-called-sponsorlink-and-how-to-replace-projects-with-it/cover_hu647669e9c69d2d183fad918664d18d93_427810_120x120_fill_box_smart1_3.png","permalink":"https://withlithum.github.io/p/the-so-called-sponsorlink-and-how-to-replace-projects-with-it/","title":"The so-called SponsorLink and how to replace projects with it"},{"content":" Note on the title\nHugo does not let me to include hashtag \u0026lsquo;#\u0026rsquo; because it is a special character and Hugo did not try to escape it. So I used ♯ as an alternative.\nC# extension 2.0.320 introduced a Language Server as the default option of language service instead of the good ol\u0026rsquo; OmniSharp. This however, presumably added dependency to .NET SDK Install extension. The Extension, unfortunately, at the time of when this post is written, doesn\u0026rsquo;t care about any of the .NET SDK installed in your computer, and will try to download SDK if it was not previously downloaded by this SDK Install extension even if appropriate SDKs are installed in your computer, AND is in the PATH.\nThis issue is being tracked via issue #135, and is being worked on via PR #1081.\nWorkaround In your User settings, find setting \u0026ldquo;Dotnet Acquisition Extension: Existing Dotnet Path\u0026rdquo; (dotnetAcquisitionExtension.existingDotnetPath), click Edit in settings.json, and add lines between braces according to your Operating System and method used to install it:\nAPT (Ubuntu repository) This may or may not work with Microsoft\u0026rsquo;s repository version.\n1 2 3 4 { \u0026#34;extensionId\u0026#34;: \u0026#34;ms-dotnettools.csharp\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/lib/dotnet/dotnet\u0026#34; } Windows (via SDK Installer)1 1 2 3 4 5 { \u0026#34;extensionId\u0026#34;: \u0026#34;ms-dotnettools.csharp\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;C:\\\\Program Files\\\\dotnet\\\\dotnet.exe\u0026#34; // Path to \u0026#34;dotnet\u0026#34; command executable file, not to your SDK } Mac1 1 2 3 4 { \u0026#34;extensionId\u0026#34;: \u0026#34;ms-dotnettools.csharp\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;/usr/local/share/dotnet/dotnet\u0026#34; } Others Replace \u0026lt;Path to 'dotnet' executable not directory\u0026gt; with the path to your dotnet executable (also called \u0026ldquo;command line driver\u0026rdquo;, usually (dotnet directory)/dotnet or (dotnet directory)/dotnet.exe).\n1 2 3 4 { \u0026#34;extensionId\u0026#34;: \u0026#34;ms-dotnettools.csharp\u0026#34;, \u0026#34;path\u0026#34;: \u0026#34;\u0026lt;Path to \u0026#39;dotnet\u0026#39; executable not directory\u0026gt;\u0026#34; } Referenced https://github.com/dotnet/vscode-dotnet-runtime/blob/main/Documentation/troubleshooting-runtime.md#manually-installing-net, only changed extension ID\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-08-04T19:31:01+08:00","image":"https://withlithum.github.io/p/c-extension-.net-sdk-install-workaround/cover_hu8059d1f55c7edbbc5e5a6017a410f465_24222_120x120_fill_box_smart1_3.png","permalink":"https://withlithum.github.io/p/c-extension-.net-sdk-install-workaround/","title":"C♯ Extension \".NET SDK Install\" Workaround"},{"content":" NOTE\nThis article is not affliated with Script Hook V .NET project, nor the RAGE Plugin Hook project. Pronouns avoided to avoid controversy. All credits for quotes, projects and resources mentioned below goes to their respective authors and contributors.\nMany of you may already heard of the Community Script Hook V .NET project. This is basically a continuation of the original Script Hook IV .NET project (note that the IV is to differ from V). Then, there is the RAGE Plugin Hook1, mainly for LSPDFR project.\nHowever, some of really tech savvy users could have spotted an issue - None of these supports new .NET 5+! Yes, GTA V projects above absolutely are aware of issue and these have not aware have already outdated and abondoned.\nBelow is a brief history related to .NET family and particular problems.\nThe .NET Framework Back then, when these projects started, .NET Framework is the choice. And at that time, .NET Core either have not came out or is too unmature to be used, and everyone have or had .NET Framework runtime on their computer, or they can easily install it. Most hooks take advantage of C++/CLI language feature to integrate C++ hooks with .NET Framework or hook the game completely on its own.\nBut there is one catch! C++/CLI was designed to merely Call C/C++ functions from C# easier, and did not support hosting C# code from C/C++ which script hooks require. So, these projects have to use all sorts of hacky ways to get it up and running.\nOriginally SHVDN did not handle this at all, it just called managed functions from the unmanaged SHV callback directly. This was fine as long as the stack space did not change between callbacks, which was the case most of the time. Unfortunately some actions like loading a save game cause SHV to reload SHVDN and it does so with a different fiber and therefore different stack space then before. The next call into managed code therefore generally crashed pretty quickly. My \u0026ldquo;solution\u0026rdquo; back then (bf12d5c, like 6 years ago, don\u0026rsquo;t remember the details anymore to be honest) was to ensure SHVDN always calls into managed code from the same fiber. This way on the first managed call the CLR sets itself up in the fiber\u0026rsquo;s stack space and consequent calls are always guaranteed to hit that same space. I did not dig into it much further back then since it seemed to get rid of the problem at hand. The core of SHVDN hasn\u0026rsquo;t really changed all that much since and nobody looked at it again, so the \u0026ldquo;fix\u0026rdquo; stuck.\n\u0026ndash; crosire in crosire/scripthookvdotnet#976\nThe new .NET However, the situtation more or less have changed as the .NET 5 became The .NET, it supports Windows desktop (and not to mention GNU/Linux and Mac), runs faster, have new and faster APIs, supports new C# language versions and features and even more!\nAnyway, after .NET 6 LTS release, I asked on the LSPDFR Forum on January about this particular issue, where one of the developers who works with LSPDFR and RPH team responded:\nThere is no support for AppDomains in .NET as compared to framework, so isolating plugins is a very different beast. I suppose the way forward would be using IPC as isolation, but I don\u0026rsquo;t think anyone has looked into that yet for a GTA framework.\n\u0026ndash; LMS, in this reply\nIn this reply, LMS pointed out that a big part of reason why RPH does not update to .NET 5+ is that isolation and security boundaries for AppDomain have been axed:\nOn .NET Core, the AppDomain implementation is limited by design and does not provide isolation, unloading, or security boundaries. For .NET Core, there is exactly one AppDomain. Isolation and unloading are provided through AssemblyLoadContext. Security boundaries should be provided by process boundaries and appropriate remoting techniques.\nAppDomain on Microsoft Learn documentation\nHowever, there are ways to isolate on .NET, as pointed out by LMS and in the docs, is to use interprocess communication and use process boundaries to isolate plugins and scripts.\nConclusion, and Forward There are attempted SHVDN porting efforts. If you want to work on it you can.GTA V Modding frameworks, at this stage, should stay on .NET Framework for more couple of years as when either .NET Framework axed or support dropped by Microsoft or GTA VI have came out (which still 2-3 years away at least). However I doubt new technology would be used if .NET Framework is still supported when GTA VI came out.\nThis link goes to the RPH Discord. RAGE Plugin Hook original author is \u0026ldquo;away without official leave\u0026rdquo; for as least a year now and the latest available RPH on that website is still for game build 2372! you can try it here\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2022-12-21T12:01:01+08:00","image":"https://withlithum.github.io/p/dotnet-hooks-for-gta-v-new-dotnet-brief-history-assumed-and-future/cover_hu34084be3f110a043f4899b6afc30888b_842941_120x120_fill_box_smart1_3.png","permalink":"https://withlithum.github.io/p/dotnet-hooks-for-gta-v-new-dotnet-brief-history-assumed-and-future/","title":"Dotnet Hooks for GTA V: New DotNet, Brief History (assumed) and future"},{"content":"Welcome to this new Hugo blog where I post techinical stuffs. Feel free to keep you updated by subscribing to RSS!\nWhat I can read from here? Well, mostly techinical. Most likely, C# and .NET, Windows API, some stuff.\n","date":"2022-12-21T11:32:05+08:00","image":"https://withlithum.github.io/p/welcome/cover_hu5d877611b67551cee1e71b62b3f100ca_2105703_120x120_fill_box_smart1_3.png","permalink":"https://withlithum.github.io/p/welcome/","title":"Welcome"}]